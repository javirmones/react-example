{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAG3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAmBA,OACI,uBAAMC,SAdW,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAI,gBAEPN,EAAWO,OAAOC,OAAS,IAC5BV,GAAe,SAAAW,GAAI,OAAMT,GAAN,mBAAqBS,OACxCR,EAAc,MAQlB,UACI,mCAAMD,EAAN,OACI,uBACIU,KAAM,OACNC,MAASX,EACTY,SAvBU,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,c,+BCTlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OAFAZ,QAAQC,IAAIoB,EAAIC,EAAOV,GAGnB,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAMA,EAAN,WCLCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEvB,ECAyB,SAAEA,GAE1B,MAA0BhB,mBAAU,CAChCuB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OAnBAC,qBAAU,WACNxB,EAASC,GACRwB,MAAM,SAAAC,GAEHC,YAAW,WACPJ,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAEb,UAOR,CAACpB,IAGGqB,ED1BwBM,CAAc3B,GAAlCa,EAAZ,EAAON,KAAca,EAArB,EAAqBA,QAIpB,OACI,qCACA,mCAAOpB,EAAP,OAEEoB,GAAW,wCAEb,qBAAKJ,UAAU,YAAf,SAIQH,EAAOJ,KAAK,SAAAC,GAAG,OACP,cAAC,EAAD,eAEIA,GADCA,YElBhBkB,EAAe,WAIzB,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAQC,OACI,qCACA,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAIA,6BAEQ8C,EAAWpB,KAAK,SAACT,GAAD,OACZ,cAAC,EAAD,CAEAA,SAAUA,GADHA,Y,MCvB3B8B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c9f1f307.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories} ) => {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState(''); //undefined\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log('Submit hecho');\r\n\r\n        if ( inputValue.trim().length > 2){\r\n            setCategories( cats => [ inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <h2> {inputValue} </h2>\r\n                <input \r\n                    type= \"text\"\r\n                    value ={ inputValue } \r\n                    onChange= { handleInputChange }\r\n                />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=M6zcbVpgjYKEIsBEFV0u92jrGf22AoCU`\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n \r\n    return gifs;\r\n \r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}/>\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n   const {data:images , loading} = useFetchGifs( category );\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3> { category } </h3>\r\n\r\n        { loading && <p>Loading</p>}\r\n\r\n        <div className=\"card-grid\" >\r\n\r\n            {\r\n        \r\n                images.map( img => (\r\n                        <GifGridItem \r\n                        key={img}\r\n                        {...img} />\r\n                        ))\r\n                    \r\n            \r\n                }\r\n        </div>\r\n    \r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState ({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category )\r\n        .then( imgs =>{\r\n\r\n            setTimeout(() => {\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                });\r\n            }, 2000);\r\n\r\n         \r\n        })\r\n\r\n\r\n\r\n    }, [category]);\r\n\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n   //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n   const [categories, setCategories] = useState(['One Punch'])\r\n\r\n //  const handleAdd = () => {\r\n  //      setCategories([...categories, 'HunterXHunter']);\r\n\r\n //  }\r\n\r\n\r\n    return (\r\n        <>\r\n        <h2> GifExpertApp</h2>\r\n        <AddCategory setCategories={ setCategories }/>\r\n\r\n        <hr/>\r\n\r\n     \r\n\r\n        <ol>\r\n            {\r\n                categories.map( (category) => \r\n                    <GifGrid \r\n                    key = {category}\r\n                    category={category}/>\r\n                )\r\n            }\r\n        </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp'\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n\n"],"sourceRoot":""}